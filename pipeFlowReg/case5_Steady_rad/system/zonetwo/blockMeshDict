/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2306                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (100 0 0)//1
    (250 0 0)//2
    (250 20 -0.7)//3
    (100 20 -0.7)//4
    (250 20 0.7)//5
    (100 20 0.7)//6
    
);

blocks
(
    hex (0 1 2 3 0 1 4 5)
    (150 20 1)
    simpleGrading (1 1 1)

  
);


boundary
(
    zonetwo_to_zoneone
    {
        type mappedPatch;

        // What to sample:
        sampleMode      nearestPatchFace;

        // Simulation world to sample
        // sampleWorld     zonetwo;

        // Region to sample
        sampleRegion        zoneone;

        // If sampleMode is nearestPatchFace : patch to find faces of
        samplePatch      zoneone_to_zonetwo;

        // Use database to get data from (one-way or loose coupling in
        // combination with functionObject)
        sampleDatabase    true;
        faces
        (
            (0 3 5 0)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (1 2 4 1)
            
        );
    }
    upperWall
    {
        type wall;
        faces
        (
             (3 2 4 5)
        );
    }
    axis
    {
      type empty;
      faces
      (
           (0 1 1 0)    
      ); 
    }
    front
    {
        type wedge;
        faces
        (
            (0 1 2 3)
            
        );
    }
    back
    {
        type wedge;
        faces
        (
            (0 1 4 5)
          
        );
    }
);


// ************************************************************************* //
